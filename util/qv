#!/usr/bin/env python

''' Quickly display binary data '''

import numpy
import optparse
import matplotlib.pyplot as plt
import sys

cmdParser = optparse.OptionParser("Usage: %prog width datafile [datafile2, datafile3...]")
cmdParser.add_option("-l","--log",action="store_true", dest="log")
options, args = cmdParser.parse_args()
if len(args)<2:
   cmdParser.error("Incorrect number of arguments")

width, inputfiles = args[0], args[1:]

for inputfile in inputfiles:
   input_data = numpy.fromfile(inputfile, 'float32')

   width = int(width)
   height = input_data.size / width
   input_data = input_data.reshape(height, width)
   masked_data = numpy.ma.masked_array(input_data, input_data == -999.0)

   if options.log:
      masked_data = numpy.log10(masked_data)

   try:
      plt.figure()
      plt.imshow(masked_data)
      plt.colorbar()
      plt.title(inputfile)
      plt.show()
   except Exception, err:
      sys.exit("Error viewing data (%s)" % err)
